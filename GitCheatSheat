BASICS

git init - dieser Befehl erstellt ein Git repository
git add - fügt eine Datei in die Staging Area hinzu (markiert die Datei)
git commit -m"Bemerkung" -fügt die Datei zum repository hinzu
git status -zeigt den Status an
git rm - entfernt eine Datei aus dem Arbeitsbaum und löscht die Datei, das rm muss aber noch committed werden
git rm --cached <file> - entfernt die Datei aus dem Arbeitsbaum aber erhält die Datei
git reset HEAD <file> - unstaged ein Datei (also add rückwärts)
git remote add origin https://github.com/dotpet/HPI_LetsGit.git  - zeigt von einem lokalen repo auf ein Online repo bei GitHub
git push -origin master -pusht das lokale repo rüber auf GitHub (einmal geadded reicht - Verbindung bleibt erhalten)
git fetch - holt das online repo zurück auf den Rechner 
git merge origin/master - fügt das über fetch geholte repo in mein lokale repo
git pull - macht in einem Zug git fetch und git merge

BRANCHES
git branch "listen" - erzeugt einen neuen Branch namens listen
git git checkout listen - läst den HEAD (Zeiger) auf listen zeigen statt auf master wie bisher
git checkout -b listen - git branch + git checkout in einem command
git push --set-upstream origin listen  : erzeugt neuen branch auf GITHUB und übergibt alle Dateien im Repo

git merge - verbindet C3 und C4 zu C5
git log - zeigt die Historie des Repos

KORREKTUREN
git commit --amend  - Korrektur der CommitMessage (Textfenster geht auf)
git commit --amend -m"KorrekterText" - korrigiert direkt die Textnachricht
git reset HEAD <filename> -- unstagged eine bereits commitete Datei 
git checkout  --<filename> - verwirft die Änderungen in der Datei !! auch auf dem lokalen Laufwerk
 